[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "macro-kit"
dynamic = ["version"]
description = "Macro recording and metaprogramming in Python"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
authors = [
    { name = "Hanjin Liu", email = "liuhanjin-sc@g.ecc.u-tokyo.ac.jp" },
]
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "typing_extensions",
]

[project.optional-dependencies]
testing = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "pytest>=6.2.0",
]

[project.urls]
Download = "https://github.com/hanjinliu/macro-kit"

[tool.hatch.version]
path = "macrokit/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/macrokit",
]

[tool.hatch.build.targets.wheel]
include = [
    "/macrokit",
]

[tool.hatch.envs.test]
features = ["testing"]

[tool.hatch.envs.test.scripts]
run = "pytest -v"

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
  "A",
  "ARG",
  "B",
  "C",
  "E",
  "F",
  "I",
  "ICN",
  "ISC",
  "PLC",
  "PLE",
  "PLW",
  "Q",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  "A001", "A002", "A003", "ARG001", "ARG002",
  # Allow non-abstract empty methods in abstract base classes
  "B027", "B904", "B006",
  "E501", "E741",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
  "UP038", "RUF001", "PLC1901", "N814", "UP035",
  "T201", "PLW0603", "PLW2901",
]
